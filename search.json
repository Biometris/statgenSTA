[{"path":"/articles/statgenSTA.html","id":"the-statgensta-package","dir":"Articles","previous_headings":"","what":"The statgenSTA Package","title":"Modeling field trials using statgenSTA","text":"statgenSTA (Single Trial Analysis) package developed easy--use package analyzing data plant breeding experiments many options plotting reporting results analyses. package can used visualizing trial data, analyzing data per trial automatically creating reports analysis. vignette describes detail prepare data analysis, perform analyses using different modeling engines, extract results models.","code":""},{"path":"/articles/statgenSTA.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Modeling field trials using statgenSTA","text":"first step, modeling field trial data statgenSTA package, creating object class TD (Trial Data). object used throughout statgenSTA package input analyses. onwards, object class TD referred TD object.","code":""},{"path":"/articles/statgenSTA.html","id":"creating-a-td-object","dir":"Articles","previous_headings":"","what":"Creating a TD object","title":"Modeling field trials using statgenSTA","text":"TD object can created data.frame function createTD(). function number things: Rename columns default column names used functions statgenSTA package. example, column data containing variety/accession/genotype renamed “genotype”. Original column names stored attribute TD object. Convert column types default column types. example, column “genotype” converted factor “rowCoord” numeric column. Split data separate data.frames trial. TD object list data.frames data.frame contains data single trial. one trial column trial defined, output list one item. Add metadata TD object. metadata used store background information trials. consists location, date experiment, longitude, latitude, trial design, plot width, plot length. None strictly necessary analysis metadata can, therefore, safely ignored. However, metadata used plotting field layouts, plotting trials map, naming plots. Metadata can added creating TD object using appropriate arguments createTD() (see Example). also possible first create TD object without metadata add metadata using getMeta() setMeta() functions (see Metadata). creating TD object, data new trials can added using addTD(). function works similarly createTD() except adds data existing TD object instead creating new one. Dropping one trials TD object can achieved using function dropTD(). using check genotypes, genotype checkId specified specific way assure models fitted correctly. column genotype contain NA check genotypes. column checkId contain one value regular genotypes, e.g. noCheck, name genotype checks. example layout table . Note fitting models check genotypes can done way genotype fitted random effect. fitting models genotype fixed effect regular check genotypes specified genotype column.","code":""},{"path":"/articles/statgenSTA.html","id":"ex","dir":"Articles","previous_headings":"Creating a TD object","what":"Example","title":"Modeling field trials using statgenSTA","text":"use package demonstrated using maize data European Union project DROPS (https://cordis.europa.eu/project/id/244374). data available https://doi.org/10.15454/IASSTN (E. J. Millet et al. 2019) relevant data set included data.frame statgenSTA package. first step loading data R. object named dropsRaw contains data 256 maize hybrids, grown two water regimes (irrigated rainfed), seven fields 2012 2013. hybrids divided four families. selection ten experiments eight traits made full data set. ten experiments form good representation full set experiments covering five scenarios described E. Millet et al. (2016). Throughout vignette examples trait grain.yield analyzed. detailed description contents data see help(dropsRaw). example, first TD object created experiments conducted 2012. data 2013 added later . practice done one go. TD object just created list five items, one trial (combination location, year water regime) original data.frame. column “Variety_ID” original data renamed “genotype” converted factor. columns “Replicate”, “block”, “loc” renamed converted likewise. columns “Row” “Column” renamed “rowCoord” “colCoord” respectively. Simultaneously two columns “rowId” “colId” created containing information converted factor. seemingly duplicate information needed spatial analysis. possible define different columns “rowId” “colId” ones used “rowCoord” “colCoord”. Finally, latitude longitude trials read column “Lat” “Long” input stored TD object named dropsTD. information columns renamed, creating TD object, stored attribute individual data.frame object.","code":"data(dropsRaw) ## Create a TD object containing data for 2012. dropsTD <- createTD(data = dropsRaw[dropsRaw$year == 2012, ],                     genotype = \"Variety_ID\",                      trial = \"Experiment\",                     loc = \"Site\",                     repId = \"Replicate\",                      subBlock = \"block\",                     rowCoord = \"Row\",                      colCoord = \"Column\",                      trLat = \"Lat\",                      trLong = \"Long\")"},{"path":"/articles/statgenSTA.html","id":"meta","dir":"Articles","previous_headings":"Creating a TD object","what":"Metadata","title":"Modeling field trials using statgenSTA","text":"metadata data.frame five rows, one trial object named dropsTD. data.frame following columns: extracting metadata, can modified added back original TD object.","code":"## Extract metadata from the TD object.  (dropsMeta <- getMeta(TD = dropsTD)) #>        trLocation trDate trDesign  trLat trLong trPlWidth trPlLength #> Cam12R Campagnola   <NA>       NA 45.171  9.532        NA         NA #> Cra12R    Craiova   <NA>       NA 44.116 24.348        NA         NA #> Gai12W    Gaillac   <NA>       NA 43.910  1.890        NA         NA #> Kar12W  Karlsruhe   <NA>       NA 49.100  8.320        NA         NA #> Ner12R      Nerac   <NA>       NA 44.170  0.307        NA         NA ## Set trial data as 1-1-2012. dropsMeta$trDate <- as.Date(rep(\"010112\", times = 5), \"%d%m%y\") dropsTD <- setMeta(TD = dropsTD, meta = dropsMeta)"},{"path":"/articles/statgenSTA.html","id":"addTD","dir":"Articles","previous_headings":"Creating a TD object","what":"Add extra data to a TD object","title":"Modeling field trials using statgenSTA","text":"add data 2013 trials TD object function addTD() can used. function similar createTD(). exception , TD object specified new data added. Note metadata now contains information ten trials. 2012 trials trial date filled. Since information used analyses package leave .","code":"## Add the data for the 2013 trials to the TD object. dropsTD <- addTD(TD = dropsTD,                   data = dropsRaw[dropsRaw$year == 2013, ],                  genotype = \"Variety_ID\",                   trial = \"Experiment\",                  loc = \"Site\",                   repId = \"Replicate\",                   subBlock = \"block\",                  rowCoord = \"Row\",                   colCoord = \"Column\",                   trLat = \"Lat\",                   trLong = \"Long\")  ## Inspect the metadata after the extra trial was added. getMeta(TD = dropsTD) #>         trLocation     trDate trDesign  trLat trLong trPlWidth trPlLength #> Cam12R  Campagnola 2012-01-01       NA 45.171  9.532        NA         NA #> Cra12R     Craiova 2012-01-01       NA 44.116 24.348        NA         NA #> Gai12W     Gaillac 2012-01-01       NA 43.910  1.890        NA         NA #> Kar12W   Karlsruhe 2012-01-01       NA 49.100  8.320        NA         NA #> Ner12R       Nerac 2012-01-01       NA 44.170  0.307        NA         NA #> Kar13R   Karlsruhe       <NA>       NA 49.100  8.320        NA         NA #> Kar13W   Karlsruhe       <NA>       NA 49.100  8.320        NA         NA #> Mar13R Martonvasar       <NA>       NA 47.311 18.778        NA         NA #> Mur13R      Murony       <NA>       NA 46.780 21.050        NA         NA #> Mur13W      Murony       <NA>       NA 46.780 21.050        NA         NA"},{"path":"/articles/statgenSTA.html","id":"summarizing-a-td-object","dir":"Articles","previous_headings":"Creating a TD object","what":"Summarizing a TD object","title":"Modeling field trials using statgenSTA","text":"summary() function can used get idea content data TD object. Multiple traits can summarized , clarity summary made grain.yield single trial. Using default argument settings nine summary statistics printed, many available. can accessed using argument summary() function. full list available statistics, use help(summary.TD). also possible output statistics using = \"\". possible summarize data TD object different groups. can done using argument groupBy. display three main summary statistics per group. , statistics can displayed using argument .","code":"## Create a summary for grain yield in Gai12W. summary(dropsTD,          trial = \"Gai12W\",          traits = \"grain.yield\") #>  #> Summary statistics for grain.yield in Gai12W   #>  #>                          grain.yield #> Number of observations         483.0 #> Number of missing values        19.0 #> Mean                           11.23 #> Median                         11.22 #> Min                             6.71 #> Max                            14.68 #> First quantile                 10.38 #> Third quantile                 12.09 #> Variance                       1.845 ## Create a summary per family in Gai12W summary(dropsTD,          trial = \"Gai12W\",          traits = \"grain.yield\",          groupBy = \"geneticGroup\") #>  #> Summary statistics for grain.yield in Gai12W grouped by geneticGroup  #>  #>                        Stiff_Stalk Iodent Other Lancaster #> Number of observations       107.0   79.0 210.0      87.0 #> Mean                         11.85  11.42 10.61     11.80 #> Standard deviation           1.320  0.964 1.337     1.110"},{"path":"/articles/statgenSTA.html","id":"TDPlot","dir":"Articles","previous_headings":"Creating a TD object","what":"Plotting a TD object","title":"Modeling field trials using statgenSTA","text":"Several plots can made investigate contents TD object. layout plot showing layout trial map plot showing location trials geographical map box plot showing variability traits correlation plot showing correlation values trait trials scatter plot showing scatter plot trait pairs trials plots described detail sections . plots default colors genotype groups trial groups chosen predefined color palette. genotype groups color palette “Dark 2”, trial groups “Alphabet”. See overview colors. possible specify different colors genotype groups trial groups per plot using arguments colGeno colTrial respectively. Also, conveniently, default colors can set using options statgen.genoColors statgen.trialColors. plot genotype groups number colors specified default colors, default colors ignored function topo.colors() used generate color palette instead. trial groups done similarly.","code":"## Set default colors for genotypes and trials. options(\"statgen.genoColors\" = c(\"blue\", \"green\", \"yellow\")) options(\"statgen.trialColors\" = c(\"red\", \"brown\", \"purple\"))"},{"path":"/articles/statgenSTA.html","id":"layPlot","dir":"Articles","previous_headings":"Creating a TD object > Plotting a TD object","what":"Layout plot","title":"Modeling field trials using statgenSTA","text":"default plot creates plots layout trials TD object. can restricted selected trials using trials argument. width length plot derived “trPlWidth” “trPlLength” metadata, available. repId specified, creating TD object, replicate blocks delineated black line. subBlock specified, sub blocks delineated blue line. type plot allows checking design experiment.  Note default title plot name trial. can manually changed using title argument. plot can extended highlighting interesting genotypes layout. default default ggplot2 package colors used highlighting genotypes. Custom colors can specified using colHighlight argument.  also possible color sub blocks within field. default default ggplot2 package colors used coloring sub blocks. Custom colors can specified using colSubBlock argument.  Highlighting genotypes coloring subBlocks done simultaneously. options specified, highlighting done. possible add labels genotypes layout.  can visualize raw data given trait layout, heatmap. type plot gives first indication spatial variability given trial. can investigated spatial modeling. Missing plots shown white.","code":"plot(dropsTD,       trials = \"Gai12W\") ## Plot the layout for Gai12W. ## Highlight genotypes A3 and 11430 in red and blue. plot(dropsTD,       trials = \"Gai12W\",       highlight = c(\"A3\", \"11430\"),      colHighlight = c(\"red\", \"blue\")) ## Plot the layout for Gai12W. ## Color sub blocks using polychrome colors for high contrast. ## Colors are specified here since this color palette is only available as such ## from R > 4.0. cols <- c(\"#5A5156\", \"#E4E1E3\", \"#F6222E\", \"#FE00FA\", \"#16FF32\", \"#3283FE\",            \"#FEAF16\", \"#B00068\", \"#1CFFCE\", \"#90AD1C\", \"#2ED9FF\", \"#DEA0FD\",            \"#AA0DFE\", \"#F8A19F\", \"#325A9B\", \"#C4451C\", \"#1C8356\", \"#85660D\",            \"#B10DA1\", \"#FBE426\", \"#1CBE4F\", \"#FA0087\", \"#FC1CBF\", \"#F7E1A0\",            \"#C075A6\", \"#782AB6\", \"#AAF400\", \"#BDCDFF\", \"#822E1C\", \"#B5EFB5\",            \"#7ED7D1\", \"#1C7F93\", \"#D85FF7\", \"#683B79\", \"#66B0FF\", \"#3B00FB\") plot(dropsTD,       trials = \"Gai12W\",       colorSubBlock = TRUE,      colSubBlock = cols) ## Plot the layout for Gai12W, label the genotypes. plot(dropsTD,       trials = \"Gai12W\",       showGeno = TRUE) ## Plot the layout for Gai12W, show raw data for grain yield. plot(dropsTD,       trials = \"Gai12W\",       traits = \"grain.yield\")"},{"path":"/articles/statgenSTA.html","id":"mapPlot","dir":"Articles","previous_headings":"Creating a TD object > Plotting a TD object","what":"Map plot","title":"Modeling field trials using statgenSTA","text":"second type plot displays trial locations map. plot made based trLat trLong metadata. latitude longitude available certain location, location plotted. locations close one another, resulting map can become quite small. arguments minLatRange minLongRange can used extend minimum range latitude longitude respectively address issue. map plots, many trials close one another, trial names can left plot specifying argument printTrialNames = FALSE.  possible color trials variable TD object using argument colorTrialBy. Colors can specified argument colTrial.","code":"## Plot the locations of the trials on a map. plot(dropsTD,       plotType = \"map\") ## Plot the locations of the trials on a map. ## Color the trials by water scenario. plot(dropsTD,       plotType = \"map\",      colorTrialBy = \"scenarioWater\",      colTrial = c(\"red\", \"darkgreen\"))"},{"path":"/articles/statgenSTA.html","id":"boxPlot","dir":"Articles","previous_headings":"Creating a TD object > Plotting a TD object","what":"Box plot","title":"Modeling field trials using statgenSTA","text":"Boxplots can made get idea contents data TD object. default box plotted per trial data specified traits. Boxplots multiple traits can made . Boxplots can made visually assess variability trait(s) TD object. default box plotted per trial specified trait. Boxplots multiple traits can made .  trials box plot can grouped using argument groupBy. Colors can applied groups within trials specifying argument colorTrialBy. plots argument colTrial can used specify colors used. boxes (groups ) trials can ordered using argument orderBy. Boxes can ordered alphabetically (orderBy = \"alphabetic\"), ascending (orderBy = \"ascending\") descending (orderBy = \"descending\") trait mean.","code":"## Create a boxplot for grain yield. plot(dropsTD,       plotType = \"box\",       traits = \"grain.yield\") ## Create a boxplot for grain yield with boxes grouped by year  ## Color the boxes by scenario within years. plot(dropsTD,       plotType = \"box\",       traits = \"grain.yield\",       groupBy = \"year\",       colorTrialBy = \"scenarioFull\")"},{"path":"/articles/statgenSTA.html","id":"corPlot","dir":"Articles","previous_headings":"Creating a TD object > Plotting a TD object","what":"Correlation plot","title":"Modeling field trials using statgenSTA","text":"Another plot, can made, plot correlations trials specified trait. order plotted trials determined clustering plotting closely related trials close one another.","code":"## Create a correlation plot for grain yield. plot(dropsTD,       plotType = \"cor\",       traits = \"grain.yield\")"},{"path":"/articles/statgenSTA.html","id":"scatPlot","dir":"Articles","previous_headings":"Creating a TD object > Plotting a TD object","what":"Scatter plot matrix","title":"Modeling field trials using statgenSTA","text":"Finally scatter plot matrix can made. lower triangular matrix displays scatter plots trials. diagonal scatter plot matrix visualizes histograms data per trial. possible calculate correlation trials print scatter plots specifying addCorr argument. addCorr argument can take values \"tl\" (top left), \"tr\" (top right), \"bl\" (bottom left) \"br\" (bottom right). indicates, correlation placed scatter plots. possible color genotypes trials plots variable TD object specifying arguments colorTrialBy, colorGenoBy, respectively.","code":"## Create a scatter plot matrix for grain yield. ## Color trials by scenario and genotypes by family. plot(dropsTD,       plotType = \"scatter\",       traits = \"grain.yield\",       colorTrialBy = \"scenarioFull\",       colorGenoBy = \"geneticGroup\")"},{"path":"/articles/statgenSTA.html","id":"modeling","dir":"Articles","previous_headings":"","what":"Modeling","title":"Modeling field trials using statgenSTA","text":"get genotypic predictions want accurately separate genetic effects spatial effects design factors. , trial model can fitted trait interested . statgenSTA package models can fitted using functions packages SpATS (Rodríguez-Álvarez et al. 2018), lme4 (Bates et al. 2015), ASReml (Butler et al. 2017). models row column resolvable row column design, \"SpATS\" default engine, models \"lme4\" used default. can always overruled specifying function argument engine. Models can fitted trial data TD object using function fitTD(). exact model fitted depends design trial (see Model types). design can specified function argument included metadata TD object described Metadata. former case, model fitted trials, latter, different models can fitted different trials. available function argument always leading. output fitTD() function object class STA (Single Trial Analysis), list fitted models one element trial model fitted .","code":""},{"path":"/articles/statgenSTA.html","id":"modType","dir":"Articles","previous_headings":"Modeling","what":"Model types","title":"Modeling field trials using statgenSTA","text":"Models can fitted five different trial designs. listed following table respective model specifications. models , fixed effects indicated italics, whereas random effects indicated bold. term genotype can fitted fixed random effect depending value argument . Extra fixed effects may fitted using argument covariates. \"SpATS\" used modeling engine, extra spatial term always included model (see Spatial models). spatial term also included modeling engine \"asreml\" function argument spatial set TRUE. Using TD object named dropsTD previous section, model trial Gai12W trait grain.yield can now fitted data. trial set using resolvable row column design. specified fitTD() using argument design. Since engine specified argument, \"SpATS\" used engine fitting model. Note supplying argument fitTD() function, two models fitted. One genotype fixed effect one genotype random effect. results models stored STA object named modDropsSp. useful extracting different results model later . trade-fitting two models takes time fitting one. Therefore, fitting models large data sets sensible explicitly define argument specific subset results needed output.","code":"## Fit a single trial model using a model based on a resolvable row column design. modDropsSp <- fitTD(TD = dropsTD,                      trials = \"Gai12W\",                      traits = \"grain.yield\",                     design = \"res.rowcol\") ## Fit a single trial model with genotype as random effect. modDropsSp2 <- fitTD(TD = dropsTD,                       trials = \"Gai12W\",                       traits = \"grain.yield\",                       what = \"random\",                       design = \"res.rowcol\")"},{"path":"/articles/statgenSTA.html","id":"spMod","dir":"Articles","previous_headings":"Modeling","what":"Spatial models","title":"Modeling field trials using statgenSTA","text":"using \"SpATS\" modeling engine fitting model, extra spatial component always included model. spatial component composed using PSANOVA() function SpATS package, uses 2-dimensional smoothing P-splines described Lee, Durbán, Eilers (2013) Rodríguez-Álvarez et al. (2018). See help(PSANOVA, SpATS) detailed description. arguments nseg nest.div PSANOVA() function can modified using control argument fitTD() function. default number number segments (number columns / 2, number rows / 2). Fitting model previous section specifying number segments columns rows 28 18 respectively, works follows: Alternatively, spatial models can fitted using \"asreml\" modeling engine setting argument spatial = TRUE. case seven models fitted best model, based goodness--fit criterion, either AIC BIC. default AIC, can modified control argument fitTD() function. seven models fitted largely depend trial design. top model described previous section extra random terms added. extra random terms depend structure data. trial regular structure, .e. replicates appear amount times trial, following combinations random spatial terms fitted: design regular following combinations random spatial terms fitted: Fitting model similar one using asreml BIC goodness--fit criterion works follows: fitted models best model stored output together summary table details fitted models.","code":"## Fit a spatial single trial model using SpATS.  ## Manually specify the number of segments for rows and columns. modDropsSp3 <- fitTD(TD = dropsTD,                       trials = \"Gai12W\",                       traits = \"grain.yield\",                       design = \"res.rowcol\",                       control = list(nSeg = c(28, 18))) if (requireNamespace(\"asreml\", quietly = TRUE)) {   ## Fit a spatial single trial model using asreml.   modDropsAs <- fitTD(TD = dropsTD,                        trials = \"Gai12W\",                        traits = \"grain.yield\",                        design = \"res.rowcol\",                        spatial = TRUE,                        engine = \"asreml\",                       control = list(criterion = \"BIC\")) } if (exists(\"modDropsAs\")) {   ## Overview of fitted models.   print(modDropsAs$Gai12W$sumTab$grain.yield, digits = 2, row.names = FALSE) }"},{"path":"/articles/statgenSTA.html","id":"model-summary","dir":"Articles","previous_headings":"Modeling","what":"Model summary","title":"Modeling field trials using statgenSTA","text":"Since genotype fitted fixed random factor object named modDropsSp, possible calculate Best Linear Unbiased Estimators (BLUEs) Best Linear Unbiased Predictors (BLUPs). Therefore, printed summary model together respective standard errors.","code":"## Set nBest to 5 to limit the output to the best 5 genotypes. summary(modDropsSp,          nBest = 5) #> Summary statistics  #> ================== #>  #> Summary statistics for grain.yield in Gai12W   #>  #>                          grain.yield #> Number of observations         483.0 #> Number of missing values        19.0 #> Mean                           11.23 #> Median                         11.22 #> Min                             6.71 #> Max                            14.68 #> First quantile                 10.38 #> Third quantile                 12.09 #> Variance                       1.845 #>  #>  #> Estimated heritability  #> ====================== #>  #> Heritability: 0.84  #>  #> Predicted means (BLUEs & BLUPs)  #> =============================== #> Best 5 genotypes #>            BLUEs       SE    BLUPs     SE #> Lo1261  13.97797  0.47111 13.65462 0.4329 #> Lo1253  13.90798  0.47146 13.44686 0.4350 #> Lo1223  13.71245  0.47115 13.27799 0.4337 #> DKMBST  13.66095  0.47214 13.23978 0.4346 #> HMV5422 13.60944  0.67929 13.02878 0.5784"},{"path":"/articles/statgenSTA.html","id":"model-plots","dir":"Articles","previous_headings":"Modeling","what":"Model plots","title":"Modeling field trials using statgenSTA","text":"Two types plots can made fitted model objects class STA.","code":""},{"path":"/articles/statgenSTA.html","id":"base-plots","dir":"Articles","previous_headings":"Modeling > Model plots","what":"Base plots","title":"Modeling field trials using statgenSTA","text":"first series four plots, histogram residuals, normal quantile plot residuals, scatter plot residuals fitted values scatter plot absolute residuals fitted values. plots can made calling plot() STA object. Plots can made multiple trials multiple traits simultaneously, either model genotype fixed effect model genotype random effect. default plots made trials traits, can restricted using arguments trials traits. one model fitted results fitted model plotted. case models fitted, default results plotted model genotype fixed. can changed using argument .","code":"## Base plots for the model with genotype fitted as random effect. plot(modDropsSp,       plotType = \"base\",       what = \"random\")"},{"path":"/articles/statgenSTA.html","id":"spatial-plots","dir":"Articles","previous_headings":"Modeling > Model plots","what":"Spatial plots","title":"Modeling field trials using statgenSTA","text":"second type plot consists five plots, spatial plots raw data, fitted values, residuals either BLUEs BLUPs, histogram BLUEs BLUPs. \"SpATS\" used engine modeling extra plot fitted spatial trend included. spatial trend can displayed original scale (default, spaTrend = \"raw\") percentage (spaTrend = \"percentage\"). latter case spatial trend scaled (.e., divided average observed response variable interest across field) displayed percentage. call creating plots similar base plots, requires specification argument plotType = \"spatial\". Note spatial plots can made spatial information, .e. rowCoord colCoord, available TD object.","code":"## Spatial plot for the model with genotype fitted as fixed effect. plot(modDropsSp,       plotType = \"spatial\") ## Spatial plot for the model with genotype fitted as fixed effect. ## Display the spatial trend as a percentage. plot(modDropsSp,       plotType = \"spatial\",       spaTrend = \"percentage\")"},{"path":"/articles/statgenSTA.html","id":"outlier-detection","dir":"Articles","previous_headings":"Modeling","what":"Outlier detection","title":"Modeling field trials using statgenSTA","text":"fitting model, possible perform outlier detection results. outlier detection checks residuals fitted model compares limit. Observations residual larger limit marked outliers. default limit calculated based number observations data. Setting custom limit also possible. output outlier detection function data.frame outliers vector indices outliers original data. vector can used removing outliers data. possible perform outlier detection model genotype fitted fixed, however, possible detect outliers genotypes replicated data. unreplicated genotypes residual always 0 , therefore, genotypes never marked outliers. get idea magnitude outliers, argument commonFactors can used see values observations similar characteristics. example , outliers also observations genotype shown.","code":"## Outlier detection for the model with genotype fitted as random. outliers <- outlierSTA(modDropsSp,                         traits = \"grain.yield\",                        what = \"random\") #> Large standardized residuals. #>  #>   trial genotype       trait    value       res outlier #>  Gai12W     B105 grain.yield 7.513174 -2.883388    TRUE ## Outlier detection for the model with genotype fitted as random. ## A custom limit is used and commonFactors set to genotype. outliers <- outlierSTA(modDropsSp,                         traits = \"grain.yield\",                         what = \"random\",                        rLimit = 2.7,                         commonFactors = \"genotype\") #> Large standardized residuals. #>  #>   trial genotype       trait     value       res outlier #>  Gai12W     A347 grain.yield  8.767218 -2.769882    TRUE #>  Gai12W     A347 grain.yield 10.448529  1.858846   FALSE #>  Gai12W     B105 grain.yield  7.513174 -2.883388    TRUE #>  Gai12W     B105 grain.yield  9.331618  1.446252   FALSE"},{"path":"/articles/statgenSTA.html","id":"model-reports","dir":"Articles","previous_headings":"Modeling","what":"Model reports","title":"Modeling field trials using statgenSTA","text":"objects class STA report() function available statgenSTA package. function creates pdf report summarizing main results fitted model. Also, tex file figures used generating pdf report saved. editing tex file possible modify report one’s needs, providing high flexibility. outfile specified, reports created default names, e.g. “modelReport_trial_trait_fixed_timestamp.pdf”, current working directory. argument outfile can used change name location report. value argument valid location name pdf file, .e. including postfix “.pdf”. Non-existing directories created report() function. outfile specified, trial, trait modeltype (fixed random) concatenated name report. reports contain general information model fitted, summary results, plots described previous section, list best (highest BLUEs BLUPs) genotypes scatter plot genotypes BLUEs BLUPs. traits low value might mean genotype performing well. correctly show best genotypes report case, set argument descending TRUE report() function. Reporting object class STA can done multiple trials, traits model types simultaneously. combination trial, trait model type, separate pdf report created. arguments traits, trials can used specifying models reports generated.","code":"## Create a report in the current working directory report(modDropsSp) ## Create a report for the model with genotype fitted as random. report(modDropsSp,         outfile = \"./myReports/dropsReport.pdf\",         what = \"random\")"},{"path":"/articles/statgenSTA.html","id":"extracting-model-results","dir":"Articles","previous_headings":"","what":"Extracting model results","title":"Modeling field trials using statgenSTA","text":"fitting model, various results can extracted calculated fitted model using function extractSTA(). can anything single result one trait one trial list different results models object class STA. results, can extracted, depend type model fitted sometimes modeling engine well. example, BLUEs can extracted genotype fitted fixed effect. hand, BLUPs heritabilities can calculated extracted genotype fitted random effect. results, can extracted, shown table . first column result. also value used argument order extract corresponding result extractSTA() function. second column shows model needs fitted order able extract result. F denotes genotype fixed effect, R genotype random effect. third column gives short description result extracted , needed, also states modeling engines can extracted. final columns shows, whether result can extracted data.frame . Results extracted data.frame extracted list. E.g. BLUES default extracted data.frame varCompF list. extracting multiple results , result always list. E.g., extracting BLUEs BLUPs result list two items per trial, named BLUEs BLUPs. Note predictions made (e.g. extracting BLUEs, BLUPs standard errors), predictions always obtained averaging levels fixed factors model. Using argument = \"\" extractSTA() function call, extracts results possible fitted model. also default. examples extracting results fitted model. Recall modDropsSp contains two fitted models, one genotype fixed effect one genotype random effect. Note BLUEsDrops data.frame, whereas predDrops list one item, since fitted model one trial.","code":"## Extract BLUEs. BLUEsDrops <- extractSTA(STA = modDropsSp,                           what = \"BLUEs\") ## Extract BLUEs and BLUPs. predDrops <- extractSTA(STA = modDropsSp,                          what = c(\"BLUEs\", \"BLUPs\"))"},{"path":"/articles/statgenSTA.html","id":"adding-extra-variables","dir":"Articles","previous_headings":"Extracting model results","what":"Adding extra variables","title":"Modeling field trials using statgenSTA","text":"data.frame named BLUEsDrops consists three columns: genotype, trial, grain.yield. model fitted multiple traits traits become columns data.frame. might useful add extra columns data used fit model output use analysis data. can achieved using argument keep extractSTA() function. include water scenario output, useful using BLUEs GxE analysis, use following command: Multiple columns can included output way. Note every column original TD object can included extracted data. columns , genotype, one value per trial can included. example, column repId containing replicates, several different values single genotype within trial, included. trying ignored warning. , however, possible include repId extracting fitted values, since observation original data fitted value computed.","code":"## Extract BLUEs from the fitted model. BLUEsDrops2 <- extractSTA(STA = modDropsSp,                            what = \"BLUEs\",                            keep = \"scenarioWater\") head(BLUEsDrops2) #>   genotype  trial scenarioWater grain.yield #> 1    11430 Gai12W            WW   11.708511 #> 2       A3 Gai12W            WW   11.554153 #> 3     A310 Gai12W            WW   11.072887 #> 4     A347 Gai12W            WW    9.511043 #> 5     A374 Gai12W            WW   10.908948 #> 6     A375 Gai12W            WW   10.823341 ## Extract fitted values from the model. ## Add repId and family to the output. fitVals <- extractSTA(STA = modDropsSp,                        what = \"fitted\",                        keep = c(\"repId\", \"geneticGroup\")) head(fitVals) #>   genotype  trial repId geneticGroup grain.yield #> 1    DE811 Gai12W     1  Stiff_Stalk    9.796469 #> 2  UH_P089 Gai12W     1       Iodent   11.133917 #> 3    W182E Gai12W     1        Other    8.933867 #> 4      Lp5 Gai12W     1  Stiff_Stalk   11.975927 #> 5    F7082 Gai12W     1        Other    8.924579 #> 6   Lo1087 Gai12W     1  Stiff_Stalk   13.206323"},{"path":"/articles/statgenSTA.html","id":"prepare-data-for-gxe-analysis","dir":"Articles","previous_headings":"Extracting model results","what":"Prepare data for GxE analysis","title":"Modeling field trials using statgenSTA","text":"Performing GxE analysis can done using statgenGxE package. package uses input format analyses statgenSTA package. use BLUEs BLUPs fitted model GxE analysis can easily converted TD object using function STAtoTD(). function creates TD object fitted model including one following: BLUEs, standard errors BLUEs, BLUPs standard errors BLUPs. Optionally, column wt weights (calculated \\((1 / seBLUEs)^2\\)) can added well. way described previous section extra columns can added output using argument keep.","code":"## Fit a model for all trials with genotype as fixed factor. modDropsSpTot <- fitTD(TD = dropsTD,                         traits = \"grain.yield\",                         what = \"fixed\",                         design = \"res.rowcol\") ## Create a TD object containing BLUEs and standard errors of BLUEs. TDGxE <- STAtoTD(STA = modDropsSpTot,                   what = c(\"BLUEs\", \"seBLUEs\")) ## Add weights and water scenario to the output. TDGxE2 <- STAtoTD(STA = modDropsSpTot,                    what = c(\"BLUEs\", \"seBLUEs\"),                    keep = \"scenarioWater\",                   addWt = TRUE)"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bart-Jan van Rossum. Author, maintainer. Fred van Eeuwijk. Contributor. Martin Boer. Contributor. Marcos Malosetti. Contributor. Daniela Bustos-Korts. Contributor. Emilie J. Millet. Contributor. Joao Paulo. Contributor. Maikel Verouden. Contributor. Willem Kruijer. Contributor. Ron Wehrens. Contributor. Choazhi Zheng. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van Rossum B (2023). statgenSTA: Single Trial Analysis (STA) Field Trials. https://biometris.github.io/statgenSTA/index.html, https://github.com/Biometris/statgenSTA/.","code":"@Manual{,   title = {statgenSTA: Single Trial Analysis (STA) of Field Trials},   author = {Bart-Jan {van Rossum}},   year = {2023},   note = {https://biometris.github.io/statgenSTA/index.html, https://github.com/Biometris/statgenSTA/}, }"},{"path":"/index.html","id":"statgensta","dir":"","previous_headings":"","what":"An R package for single trial analysis of field trials","title":"An R package for single trial analysis of field trials","text":"statgenSTA R package providing functions phenotypic analysis agricultural field trials using mixed models without spatial components. Analysis can done using one R packages SpATS, lme4 asreml. latter license required can obtained upon purchase VSNi. statgenSTA extensive options summarizing visualizing raw data fitted models. example shows selection possible. full overview options best read vignette","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for single trial analysis of field trials","text":"Install CRAN: Install latest development version GitHub (requires remotes package):","code":"install.packages(\"statgenSTA\") remotes::install_github(\"Biometris/statgenSTA\", ref = \"develop\", dependencies = TRUE)"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"An R package for single trial analysis of field trials","text":"Example using phenotypic data wheat trial Chile. data used vignette described detail. First get data form required package, converting object class T(rial)D(ata). plots get first idea contents data.     Fit mixed models one trials, Gai12W, visualize output.","code":"library(statgenSTA) data(dropsRaw) dropsTD <- createTD(data = dropsRaw,                     genotype = \"Variety_ID\",                      trial = \"Experiment\",                     loc = \"Site\",                     repId = \"Replicate\",                      subBlock = \"block\",                     rowCoord = \"Row\",                      colCoord = \"Column\",                      trLat = \"Lat\",                      trLong = \"Long\") ## Plot the layout for Gai12W. ## Highlight genotypes A3 and 11430 in red and blue. plot(dropsTD,       trials = \"Gai12W\",       highlight = c(\"A3\", \"11430\"),      colHighlight = c(\"red\", \"blue\")) ## Plot the locations of the trials on a map. ## Color the trials by water scenario. plot(dropsTD,       plotType = \"map\",      colorTrialBy = \"scenarioWater\",      colTrial = c(\"red\", \"darkgreen\")) ## Create a boxplot for grain yield. plot(dropsTD,       plotType = \"box\",       traits = \"grain.yield\") ## Create a scatter plot matrix for grain yield. ## Color trials by scenario and genotypes by family. plot(dropsTD,       plotType = \"scatter\",       traits = \"grain.yield\",       colorTrialBy = \"scenarioFull\",       colorGenoBy = \"geneticGroup\") ## Fit a single trial model using a model based on a resolvable row column design. modDropsSp <- fitTD(TD = dropsTD,                      trials = \"Gai12W\",                      traits = \"grain.yield\",                     design = \"res.rowcol\") #> Using SpATS for fitting models. ## Spatial plot for the model with genotype fitted as fixed effect. plot(modDropsSp,       plotType = \"spatial\") ## Spatial plot for the model with genotype fitted as fixed effect. ## Display the spatial trend as a percentage. plot(modDropsSp,       plotType = \"spatial\",       spaTrend = \"percentage\")"},{"path":"/reference/STAtoCross.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert STA to Cross — STAtoCross","title":"Convert STA to Cross — STAtoCross","text":"Convert STA object cross object package qtl. Genotypic information available .csv file. way create object class cross importing phenotypic genotypic data external files. Therefore phenotypic data, either BLUEs BLUPs fitted model first written temporary file. genotypic data available .csv file correct format well, see genoFile description format. phenotypic genotypic files imported cross object using read.cross function qtl package.","code":""},{"path":"/reference/STAtoCross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert STA to Cross — STAtoCross","text":"","code":"STAtoCross(   STA,   trial = NULL,   traits = NULL,   what = c(\"BLUEs\", \"BLUPs\"),   genoFile,   genotypes = c(\"A\", \"H\", \"B\", \"D\", \"C\"),   ... )"},{"path":"/reference/STAtoCross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert STA to Cross — STAtoCross","text":"STA object class STA. trial character string indicating trial exported. NULL STA contains one trial, trial exported. traits character string containing traits exported. NULL, traits selected trial exported. character string containing statistics exported phenotype cross object. can either BLUEs BLUPs. genoFile character string indicating filename containing phenotypic data. data format required qtl package. first column contain individuals, starting row 4. following columns contain markers second third row chromosome position chromosome following rows genotypes. genotypes character vector specifying genotype codes corresponding AA, AB, BB, BB AA. ... arguments passed read.cross function. See read.cross.","code":""},{"path":[]},{"path":"/reference/STAtoCross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert STA to Cross — STAtoCross","text":"","code":"## Fit model using SpATS. modSp <- fitTD(TD = TDHeat05,                design = \"res.rowcol\",                traits = \"yield\",                what = \"fixed\") #> Using SpATS for fitting models.  ## Create cross object with BLUEs from modSp using genotypic information ## from markers.csv in the package. cross <- STAtoCross(modSp,                     genoFile = system.file(\"extdata\", \"markers.csv\",                                            package = \"statgenSTA\"))"},{"path":"/reference/STAtoTD.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert STA to TD — STAtoTD","title":"Convert STA to TD — STAtoTD","text":"Convert STA object TD object. able use output single trial analysis Genotype--Environment (GxE) analysis output first needs converted back TD object. function exactly . extracts BLUEs, BLUPs standard errors STA object creates new TD object using . Also column \"wt\" (weight) may also added. Weights calculated 1/(SE BLUEs) ^ 2.","code":""},{"path":"/reference/STAtoTD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert STA to TD — STAtoTD","text":"","code":"STAtoTD(   STA,   what = c(\"BLUEs\", \"seBLUEs\", \"BLUPs\", \"seBLUPs\"),   traits = NULL,   keep = NULL,   addWt = FALSE )"},{"path":"/reference/STAtoTD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert STA to TD — STAtoTD","text":"STA object class STA. character string containing statistics included traits TD object. Multiple statistics can included case appear statistic_trait output traits character string containing traits included TD object. NULL, traits exported. keep Columns TD object used input STA model copied output. see extractSTA possible columns copy. available TD, column trial always copied. addWt column wt added output? TRUE weight calculated 1/(SE BLUEs) ^ 2. multiple traits included output, multiple weight columns added, 1 trait. named wt_trait.","code":""},{"path":"/reference/STAtoTD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert STA to TD — STAtoTD","text":"Trial information trials STA object copied original TD object modeling done.","code":""},{"path":[]},{"path":"/reference/STAtoTD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert STA to TD — STAtoTD","text":"","code":"## Fit model using SpATS. modSp <- fitTD(TD = TDHeat05,                design = \"res.rowcol\",                traits = \"yield\",                what = \"fixed\") #> Using SpATS for fitting models.  ## Create TD object from the fitted model with BLUEs and standard errors. TDRes <- STAtoTD(modSp,                  what = c(\"BLUEs\", \"seBLUEs\"))  ## Add a weight column in the output. TDResWt <- STAtoTD(modSp,                    what = c(\"BLUEs\", \"seBLUEs\"),                    addWt = TRUE)"},{"path":"/reference/TD.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 class TD — TD","title":"S3 class TD — TD","text":"createTD Function creating objects S3 class TD (Trial Data). function converts data.frame object class TD following steps: Check input data Rename columns default column names - default column names: genotype, trial, loc, year, repId, subBlock, rowCoord, colCoord, rowId, colId, checkId Convert column types default column types - rowCoord colCoord converted numeric columns, renamed columns factor columns. Columns default columns, e.g. traits covariates included output unchanged. Split input data trial - trial input data become list item output. Add meta data - trial meta data added attributes different output items. function parameters starting \"tr\" provide meta data. values recycled needed, setting single \"trDesign\", trials get design. trLat, trLong, trDesign trDate column data contains information can specified well. meta data can changed later using getMeta setMeta addTD Function adding extra trial data existing object class TD. data new trials added data existing trials. possible add data already existing trial, cause multiple items output identical names, might cause problems later analysis. Therefore warning issued case.dropTD Function removing data selected trials existing object class TD.summary.TD plot.TD methods available.","code":""},{"path":"/reference/TD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 class TD — TD","text":"","code":"createTD(   data,   genotype = NULL,   trial = NULL,   loc = NULL,   year = NULL,   repId = NULL,   subBlock = NULL,   plotId = NULL,   rowCoord = NULL,   colCoord = NULL,   rowId = rowCoord,   colId = colCoord,   checkId = NULL,   trLocation = NULL,   trDate = NULL,   trDesign = NULL,   trLat = NULL,   trLong = NULL,   trPlWidth = NULL,   trPlLength = NULL )  addTD(   TD,   data,   genotype = NULL,   trial = NULL,   loc = NULL,   year = NULL,   repId = NULL,   subBlock = NULL,   plotId = NULL,   rowCoord = NULL,   colCoord = NULL,   rowId = rowCoord,   colId = colCoord,   checkId = NULL,   trLocation = NULL,   trDate = NULL,   trDesign = NULL,   trLat = NULL,   trLong = NULL,   trPlWidth = NULL,   trPlLength = NULL )  dropTD(TD, rmTrials)"},{"path":"/reference/TD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 class TD — TD","text":"data data.frame containing trial data least column genotype. data.frame wide format, .e. available phenotypic data separate column within data.frame. genotype optional character string indicating column data contains genotypes. trial optional character string indicating column data contains trials. loc optional character string indicating column data contains trial locations. year optional character string indicating column data contains years. repId optional character string indicating column data contains replicates. subBlock optional character string indicating column data contains sub blocks. plotId optional character string indicating column data contains plots. column combined trial single output factor. rowCoord optional character string indicating column data contains row coordinates. colCoord optional character string indicating column data contains column coordinates. rowId optional character string indicating column data contains field rows. supplied, assumed rowCoord. colId optional character string indicating column data contains field columns. supplied, assumed colCoord. checkId optional character string indicating column data contains check IDs. trLocation optional character vector indicating locations trials. used default names creating plots summaries. locations provided, first column loc considered. contains one unique value trial used trLocation. Otherwise trial name used. trDate optional character string indicating column data contains date trial date vector indicating dates trials. trDesign optional character string indicating column data contains design trial character vector indicating designs trials. Either \"none\" ((known) design), \" ibd\" (incomplete-block design), \"res.ibd\" (resolvable incomplete-block design), \"rcbd\" (randomized complete block design), \"rowcol\" (row-column design) \"res.rowcol\" (resolvable row-column design). trLat optional character string indicating column data contains latitude trial numerical vector indicating latitudes trials scale -90 90. trLong optional character string indicating column data contains latitude trial numerical vector indicating longitudes trials scale -180 180. trPlWidth optional positive numerical vector indicating widths plots. trPlLength optional positive numerical vector indicating lengths plots. TD object class TD modified. rmTrials character vector trials removed.","code":""},{"path":"/reference/TD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 class TD — TD","text":"object class TD, list data.frames renamed columns attribute renamedCols containing overview renamed columns. unique value trial, output data.frame list name trial. data.frames attributes containing metadata corresponding trial. column trial, list contain one item named input data.","code":""},{"path":[]},{"path":"/reference/TD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 class TD — TD","text":"","code":"## Create a data.frame to be converted to TD object. ## The data consists of genotype, trial, row and column information and ## two traits, yield and flowering time. datT1 <- data.frame(geno = paste0(\"G\", 1:10),                     tr = \"T1\",                     row = rep(1:5, each = 2),                     col = rep(1:2, times = 5),                     yield = 1:10,                     flowering = 3:12)  ## Convert data.frame to TD object. TDT1 <- createTD(data = datT1,                  genotype = \"geno\",                  trial = \"tr\",                  rowCoord = \"row\",                  colCoord = \"col\")  ## Create a second data.frame similar to the first with data for a second trial. datT2 <- data.frame(geno = paste0(\"G\", 1:10),                     tr = \"T2\",                     row = rep(1:2, each = 5),                     col = rep(1:5, times = 2),                     yield = 10:1,                     flowering = 12:3)  ## Add this data to the TD object created above. TDTot <- addTD(TD = TDT1,                data = datT2,                genotype = \"geno\",                trial = \"tr\",                rowCoord = \"row\",                colCoord = \"col\")  ## Drop the data for the first trial from the object. TDT2 <- dropTD(TD = TDTot,                rmTrials = \"T1\")"},{"path":"/reference/TDHeat05.html","id":null,"dir":"Reference","previous_headings":"","what":"Field data for a wheat experiment in Mexico — TDHeat05","title":"Field data for a wheat experiment in Mexico — TDHeat05","text":"dataset converted TD object containing raw plot data one trial series wheat trials conducted Mexico CIMMYT. different trials took place different regimes irrigation temperature, 4 trials across two years, labelled DRIP05, HEAT05, HEAT06 IRRI06. TD object contains data HEAT05. Within trial, set 167 progeny RIL (Recombinant Inbred Line; 8 generations) population tested alongside population parents (Seri Babax). lattice design two replicates used trial. first replicate entries randomized, considered random selection population.","code":""},{"path":"/reference/TDHeat05.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Field data for a wheat experiment in Mexico — TDHeat05","text":"","code":"TDHeat05"},{"path":"/reference/TDHeat05.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Field data for a wheat experiment in Mexico — TDHeat05","text":"TD object, list containing data.frame following columns: trial trial, combination watering regime, year nitrogen treatment genotype genotype Plot plot number field repId replicate subBlock block id rowId row within field (factor) colId column within field (factor) yield yield grams per square meter rowCoord row within field (numerical value) colCoord column within field (numerical value)","code":""},{"path":"/reference/TDMaize.html","id":null,"dir":"Reference","previous_headings":"","what":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"dataset converted TD object containing data corresponding F2 maize reference population CIMMYT maize drought breeding program, derived cross drought-tolerant line (P1) drought susceptible line (P2) described detail Ribaut et al. (1996, 1997). DNA 211 F2 plants extracted produce information 132 co-dominant markers 10 linkage groups. Phenotypic evaluations performed 211 F2:3 families, one derived original F2 plant. families evaluated different water nitrogen regimes 1992, 1994 1996. winter 1992 three water regimes imposed trials: well watered (NS), intermediate stress () severe stress (SS). winter 1994, SS trials available. Nitrogen availability varied 1996 trials, two low nitrogen treatments (LN, winter summer) one high-nitrogen treatment (HN summer). trials, five traits evaluated grain yield included data.","code":""},{"path":"/reference/TDMaize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"","code":"TDMaize"},{"path":"/reference/TDMaize.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"TD object, list containing 8 data.frames, following columns: trial trial, combination watering regime, year nitrogen treatment genotype genotype regime stress level, NS (water stress), (intermediate water stress, SS (severe water stress), LN (low nitrogen) HN (high nitrogen)) yld grain yield tons","code":""},{"path":"/reference/TDMaize.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"https://link.springer.com/article/10.1007/BF00221905","code":""},{"path":"/reference/TDMaize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"Ribaut JM, Hoisington DA, Deutsch JA, Jiang C, Gonzalez de Leon D (1996) Identification quantitative trait loci drought conditions tropical maize.1. Flowering parameters anthesis-silking interval. Theor Appl Genet 92:905–914 Ribaut JM, Jiang C, Gonzalez de Leon D, Edmeades GO, Hoisington DA (1997) Identification quantitative trait loci drought conditions tropical maize.2. Yield components marker-assisted selection strategies. Theor Appl Genet 94:887–896","code":""},{"path":"/reference/as.data.frame.extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce extracted heritabilities to data.frame — as.data.frame.extract","title":"Coerce extracted heritabilities to data.frame — as.data.frame.extract","text":"Function coercing heritabilities extracted STA object data.frame nicer printing easier post processing.","code":""},{"path":"/reference/as.data.frame.extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce extracted heritabilities to data.frame — as.data.frame.extract","text":"","code":"# S3 method for extract as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"/reference/as.data.frame.extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce extracted heritabilities to data.frame — as.data.frame.extract","text":"x object class extract. row.names optional character vector row.names added data.frame. optional Ignored. ... Ignored.","code":""},{"path":"/reference/dropsRaw.html","id":null,"dir":"Reference","previous_headings":"","what":"DROPS data set — dropsRaw","title":"DROPS data set — dropsRaw","text":"dataset comes European Union project DROPS (DROught-tolerant yielding PlantS). panel 256 maize hybrids grown two water regimes (irrigated rainfed), seven fields 2012 2013, respectively, spread along climatic transect western eastern Europe, plus one site Chile 2013. resulted 28 experiments defined combination one year, one site one water regime, two three repetitions rainfed irrigated treatments, respectively. detailed environmental characterisation carried , hourly records micrometeorological data soil water status, associated precise measurement phenology. Grain yield components measured end experiment. 10 experiments selected full data set, two five main environmental scenarios identified data. scenarios added data well classification genotypes four genetic groups. data.frame contains raw phenotypic data per experiment (Location × year × water regime), one value per individual plot outliers removed. data.frame 6499 rows 25 columns. Experiment experiments ID described three first letters city’s name followed year experiment water regime W watered R rain-fed. Site location experiment performed year year experiment performed plotId plot identifier (available) treatment targeted water regime Code_ID, Variety_ID, Accession_ID identifier genotype Replicate, block experimental design factors Row, Column 2D coordinates plot grain.yield genotypic mean yield adjusted 15\\ ton per hectare (t ha^-1) grain.number genotypic mean number grain per square meter grain.weight genotypic mean individual grain weight milligram (mg) anthesis genotypic mean male flowering (pollen shed), thermal time cumulated since emergence (d_20°C) silking genotypic mean female flowering (silking emergence), thermal time cumulated since emergence (d_20°C) plant.height genotypic mean plant height, ground level base flag leaf (highest) leaf centimeter (cm) tassel.height genotypic mean plant height including tassel, ground level highest point tassel centimeter (cm) ear.height genotypic mean ear insertion height, ground level ligule highest ear leaf centimeter (cm) Lat latitude location experiment performed Long longitude location experiment performed scenarioWater water scenario experiment, well watered (WW) water deficit (WD) scenarioTemp temperature scenario experiment, Cool, Hot Hot(Day) scenarioFull full scenario experiment, combination scenarioWater scenarioTemp geneticGroup genetic group genotype belongs","code":""},{"path":"/reference/dropsRaw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DROPS data set — dropsRaw","text":"","code":"dropsRaw"},{"path":"/reference/dropsRaw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DROPS data set — dropsRaw","text":"object class data.frame 6486 rows 26 columns.","code":""},{"path":"/reference/dropsRaw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"DROPS data set — dropsRaw","text":"doi:10.15454/IASSTN","code":""},{"path":"/reference/dropsRaw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DROPS data set — dropsRaw","text":"Millet, E. J., Pommier, C., et al. (2019). multi-site experiment network European fields assessing maize yield response environmental scenarios (Data set). doi:10.15454/IASSTN","code":""},{"path":"/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract statistics from Fitted Models — extract","title":"Extract statistics from Fitted Models — extract","text":"function deprecated. Use extractSTA extracting results fitted models.","code":""},{"path":"/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract statistics from Fitted Models — extract","text":"","code":"extract(   STA,   trials = names(STA),   traits = NULL,   what = \"all\",   keep = NULL,   restoreColNames = FALSE )"},{"path":"/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract statistics from Fitted Models — extract","text":"STA object class STA. trials character vector trials statistics computed. supplied, statistics computed trials modeled. traits character vector traits statistics computed. supplied, statistics computed traits modeled. character vector indicating statistics computed. statistics available models, models fitted using certain engine. case, indicated list options details. = \"\", available statistics computed. keep character vector column(s) object class TD used modeling. columns kept output computing fitted values, residuals, standardized residuals rMeans. Columns can also kept computing (se)BLUEs (se)BLUPs column keep contains unique values modeled variables, .e. column repId several different values per genotype kept. restoreColNames original column names restored output extracted data?","code":""},{"path":"/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract statistics from Fitted Models — extract","text":"list , per trial statistics extracted, list statistics.","code":""},{"path":"/reference/extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract statistics from Fitted Models — extract","text":"Possible options : F - BLUEs Best Lineair Unbiased Estimators. F - seBLUES Standard errors BLUEs. R - BLUPs Best Lineair Unbiased Predictors. R - seBLUPs Standard errors BLUPs. F - ue Unit errors - lme4 asreml. R - heritability Heritability. F - varCompF Variance components model genotype fixed component. R - varCompR Variance components model genotype random component. R - varGen Genetic variance component(s). R - varErr Residual variance component(s) - lme4 asreml. R - varSpat Spatial variance components - SpATS. F - fitted Fitted values model genotype fixed component. F - residF Residuals model genotype fixed component. F - stdResF Standardized residuals model genotype fixed component R - rMeans Fitted values model genotype random component. R - ranEf Random genetic effects. F - residR Residuals model genotype random component. F - stdResR Standardized residuals model genotype random component F - wald Results wald test - lme4 asreml. F - CV Coefficient variation - lme4 asreml. F - rDfF Residual degrees freedom model genotype fixed component. R - rDfR Residual degrees freedom model genotype random component. R - effDim Effective dimensions - SpATS. R - ratEffDim Ratio's effective dimensions - SpATS. F - sed Standard error difference - asreml. F - lsd Least significant difference - asreml. available statistics.","code":""},{"path":[]},{"path":"/reference/extractSTA.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract statistics from fitted models — extractSTA","title":"Extract statistics from fitted models — extractSTA","text":"Extract calculate various results fitted models BLUEs, BLUPs, unit errors heritabilities. full list results can extracted, see table . result(s) extract can specified . single result extracted, result returned data.frame, possible, format result incompatible data.frame format, result returned list. E.g. BLUEs extracted, output function data.frame BLUEs. However varCompF extracted, output function list. Results returned data.frame marked asDataFrame column table. default return value result data.frame can overridden user specifying asDataFrame = FALSE. result returned list data.frames, one per trial. way round possible. result returned list according table, returned data.frame. multiple results extracted time, always returned list.  results can calculated model fitted genotype fixed genotype random. E.g. compute heritabilities model fitted genotype random effect. indicated table column model \"F\" \"R\" respectively. Possible options :","code":""},{"path":"/reference/extractSTA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract statistics from fitted models — extractSTA","text":"","code":"extractSTA(   STA,   trials = names(STA),   traits = NULL,   what = \"all\",   asDataFrame = length(what) == 1 && what != \"all\",   keep = NULL,   restoreColNames = FALSE )"},{"path":"/reference/extractSTA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract statistics from fitted models — extractSTA","text":"STA object class STA. trials character vector trials statistics computed. supplied, statistics computed trials modeled. traits character vector traits statistics computed. supplied, statistics computed traits modeled. character vector indicating statistics computed. statistics available models, models fitted using certain engine. case, indicated list options details. = \"\", available statistics computed. asDataFrame output reshaped data.frame. possible number statistics extract one. keep character vector column(s) object class TD used modeling. columns kept output computing fitted values, residuals, standardized residuals rMeans. Columns can also kept computing (se)BLUEs (se)BLUPs column keep contains unique values modeled variables, .e. column repId several different values per genotype kept. restoreColNames original column names restored output extracted data?","code":""},{"path":"/reference/extractSTA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract statistics from fitted models — extractSTA","text":"Depending input either data.frame list , per trial statistics extracted, list statistics.","code":""},{"path":[]},{"path":"/reference/extractSTA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract statistics from fitted models — extractSTA","text":"","code":"## Fit model using SpATS. modSp <- fitTD(TD = TDHeat05,                design = \"res.rowcol\",                traits = \"yield\") #> Using SpATS for fitting models.  ## Extract all available statistics from the fitted model. extr <- extractSTA(modSp)  ## Extract only the BLUEs from the fitted model. BLUEs <- extractSTA(modSp,                     what = \"BLUEs\")  ## Extract only the BLUEs from the fitted model and keep trial as variable in ## the output. BLUEs2 <- extractSTA(modSp,                      what = \"BLUEs\",                      keep = \"trial\")"},{"path":"/reference/fitTD.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit single trial mixed model — fitTD","title":"Fit single trial mixed model — fitTD","text":"Perform REML analysis given specific experimental design using either SpATS, lme4 asreml. SpATS used default method row coordinates (rowCoord) column coordinates (colCoord) present, lme4 otherwise. See details exact models fitted.","code":""},{"path":"/reference/fitTD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit single trial mixed model — fitTD","text":"","code":"fitTD(   TD,   trials = names(TD),   design = NULL,   traits,   what = c(\"fixed\", \"random\"),   covariates = NULL,   useCheckId = FALSE,   spatial = FALSE,   engine = NA,   control = NULL,   progress = FALSE,   ... )"},{"path":"/reference/fitTD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit single trial mixed model — fitTD","text":"TD object class TD. trials character vector specifying trials models fitted. design character string specifying experimental design. Either \"ibd\" (incomplete block design), \"res.ibd\" (resolvable incomplete block design), \"rcbd\" (randomized complete block design), \"rowcol\" (row column design) \"res.rowcol\" (resolvable row column design). Can ignored trial design specified meta data (see setMeta). traits character vector specifying traits models fitted. character vector specifying whether \"genotype\" fitted fixed random effect. specified, models fitted. covariates character vector specifying covariates fitted extra fixed effects model. useCheckId checkId used fixed effect model? TRUE, TD contain column 'checkId'. Using checkId fixed effect can done genotype fitted random effect model. spatial spatial models tried? Spatial models can fitted SpATS asreml. SpATS used modeling, spatial models can fitted spatial always set TRUE. asreml used, fitting spatial models optional. engine character string specifying name mixed modeling engine use, either \"SpATS\", \"lme4\" \"asreml.\" spatial models, \"SpaTS\" used default, models \"lme4\". control optional list control parameters passed actual fitting functions. Currently nSeg nestDiv valid parameters fitting model using SpATS. pass value nseg nest.div PSANOVA respectively. nSeg also named list can supplied containing values nSeg per trial.criterion valid parameter fitting spatial model using asreml. may used pass goodness--fit criterion comparing different spatial models. See also details. parameters ignored. progress progress modeling printed. TRUE, every trial line output indicating traits fitted particular trial. ... arguments passed SpATS, lme4 asreml.","code":""},{"path":"/reference/fitTD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit single trial mixed model — fitTD","text":"object class STA, list containing, per trial analyzed, list : mRand list models fitted genotype random effect. mFix list models fitted genotype fixed effect. TD object class TD containing data mRand mFix based. traits character vector indicating traits models fitted. design character string containing design trial. (see fitTD possible designs). spatial character string indicating spatial part model. FALSE spatial design used. engine character string containing engine used analysis. predicted character string indicating variable predicted. sumTab data.frame summary table spatial models tried engine = \"asreml\" spatial = TRUE","code":""},{"path":"/reference/fitTD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit single trial mixed model — fitTD","text":"actual model fitted depends design. supported designs, following models used: models , fixed effects indicated italics whereas random effects indicated bold. genotype can fitted fixed random effect depending value parameter . Extra fixed effects may fitted using parameter covariates. SpATS used modeling engine, extra spatial term always included  model. term constructed using function PSANOVA SpATS package asPSANOVA(colCoord, rowCoord, nseg = nSeg, nest.div = 2) wherenSeg = (number columns / 2, number rows / 2). nseg nest.div can modified using control parameter. asreml used modeling spatial TRUE seven models fitted different random terms covariance structure. best model determined based goodness--fit criterion, either AIC BIC. can set using control parameter criterion, default AIC. fitted random terms depend structure data. trial regular structure, .e. replicates appear amount times trial, following combinations random spatial terms fitted: design regular following combinations random spatial terms fitted:","code":""},{"path":"/reference/fitTD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit single trial mixed model — fitTD","text":"Maria Xose Rodriguez-Alvarez, Martin P. Boer, Fred . van Eeuwijk, Paul H.C. Eilers (2017). Correcting spatial heterogeneity plant breeding experiments P-splines. Spatial Statistics doi:10.1016/j.spasta.2017.10.003 Butler, D. G., et al. (2010). Analysis Mixed Models S language environments: ASReml-R reference manual. Brisbane, DPI Publications Douglas Bates, Martin Maechler, Ben Bolker, Steve Walker (2015). Fitting Linear Mixed-Effects Models Using lme4. Journal Statistical Software, 67(1), 1-48. https://www.jstatsoft.org/article/view/v067i01/0.","code":""},{"path":"/reference/fitTD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit single trial mixed model — fitTD","text":"","code":"# \\donttest{ ## Fit model using lme4. lmeMod <- fitTD(TD = TDHeat05,                 design = \"ibd\",                 traits = \"yield\",                 what = \"fixed\",                 engine = \"lme4\")  ## Summarize results. summary(lmeMod) #> Summary statistics  #> ================== #>  #> Summary statistics for yield in HEAT05   #>  #>                             yield #> Number of observations      338.0 #> Number of missing values      0.0 #> Mean                       184.16 #> Median                     179.81 #> Min                         54.58 #> Max                        341.77 #> First quantile             148.56 #> Third quantile             220.50 #> Variance                 2569.229 #>  #>  #> Predicted means (BLUEs)  #> =============================== #> Best 20 genotypes #>        BLUEs     SE #> SB023 302.84 30.194 #> SB025 297.84 30.194 #> SB022 285.13 30.194 #> SB032 280.96 30.194 #> SB011 272.45 30.194 #> SB156 262.77 30.194 #> SB055 253.21 30.194 #> SB020 253.08 30.194 #> SB144 251.55 30.194 #> SB045 250.07 30.194 #> SB054 246.51 30.194 #> SB031 245.69 30.338 #> SB027 244.27 30.194 #> SB128 243.91 30.338 #> SB194 239.22 30.194 #> SB077 238.66 30.194 #> SB093 236.58 30.194 #> SB106 233.86 30.194 #> SB041 232.83 30.194 #> SB143 232.41 30.194  ## Create base plots of the results. plot(lmeMod)   ## Create a pdf report summarizing results. report(lmeMod,        outfile = tempfile(fileext = \".pdf\"),        what = \"fixed\") #> Error in report.STA(lmeMod, outfile = tempfile(fileext = \".pdf\"), what = \"fixed\"): An installation of LaTeX is required to create a pdf report.  ## Fit model using SpATS. spaMod <- fitTD(TD = TDHeat05,                 design = \"res.rowcol\",                 traits = \"yield\",                 what = \"fixed\") #> Using SpATS for fitting models. summary(spaMod) #> Summary statistics  #> ================== #>  #> Summary statistics for yield in HEAT05   #>  #>                             yield #> Number of observations      338.0 #> Number of missing values      0.0 #> Mean                       184.16 #> Median                     179.81 #> Min                         54.58 #> Max                        341.77 #> First quantile             148.56 #> Third quantile             220.50 #> Variance                 2569.229 #>  #>  #> Predicted means (BLUEs)  #> =============================== #> Best 20 genotypes #>        BLUEs     SE #> SB023 285.06 11.181 #> SB025 284.27 11.079 #> SB022 281.86 11.242 #> SB032 278.75 11.111 #> SB011 270.48 11.319 #> SB156 266.81 11.300 #> SB144 265.17 11.354 #> SB031 253.33 11.056 #> SB093 247.56 11.197 #> SB055 246.73 11.390 #> SB054 246.58 11.474 #> SB020 241.32 11.159 #> SB028 239.31 11.241 #> SB194 238.18 11.300 #> SB128 237.68 11.343 #> SB155 236.16 11.255 #> SB027 235.91 11.125 #> SB143 235.82 11.390 #> SB163 233.97 11.130 #> SB181 233.14 11.084  ## Create spatial plots of the results. plot(spaMod, plotType = \"spatial\")   ## Fit model using SpATS. ## Specify the number of segments to use in PSANOVA spaMod2 <- fitTD(TD = TDHeat05,                  design = \"res.rowcol\",                  traits = \"yield\",                  what = \"fixed\",                  control = list(nSeg = c(13, 26))) #> Using SpATS for fitting models.  ## Create a pdf report summarizing results. report(spaMod, outfile = tempfile(fileext = \".pdf\"), what = \"fixed\") #> Error in report.STA(spaMod, outfile = tempfile(fileext = \".pdf\"), what = \"fixed\"): An installation of LaTeX is required to create a pdf report.  ## Fit model using asreml. if (requireNamespace(\"asreml\", quietly = TRUE)) {   asrMod <- fitTD(TD = TDHeat05,                   design = \"res.rowcol\",                   traits = \"yield\",                   what = \"fixed\",                   engine = \"asreml\")   summary(asrMod)    report(asrMod,          outfile = tempfile(fileext = \".pdf\"),          what = \"fixed\") } # }"},{"path":"/reference/getMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set metadata for TD objects — getMeta","title":"Get and set metadata for TD objects — getMeta","text":"Functions extracting adding metadata objects class TD.getMeta extracts data.frame location, date, design, latitude, longitude, plot width plot length trials TD.setMeta adds metadata data.frame object class TD. See details specifications data.frame. common use case extracting metadata TD object, modifying content adding back TD object. Information metadata TD object used plotting functions (e.g. latitude longitude map plot) fitting models data (trial design).","code":""},{"path":"/reference/getMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set metadata for TD objects — getMeta","text":"","code":"getMeta(TD)  setMeta(TD, meta)"},{"path":"/reference/getMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set metadata for TD objects — getMeta","text":"TD object class TD. meta data.frame containing metadata.","code":""},{"path":"/reference/getMeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and set metadata for TD objects — getMeta","text":"setting metadata, metadata data.frame rownames corresponding trials TD. data.frame contain one following columns: trLocation location trial. Used default name creating plots summaries. trDate date trial. trDesign design trial. One \"none\" ((known) design), \"ibd\" (incomplete-block design), \"res.ibd\" (resolvable incomplete-block design), \"rcbd\" (randomized complete block design), \"rowcol\" (row-column design) \"res.rowcol\" (resolvable row-column design). Used fitting models. trLat latitude trial scale -90 90. Used plotting trials map. trLong longitude trial scale -180 180. Used plotting trials map. trPlWidth width plot. Used combination trPlLength determine size plots layout plot trial. trPlLength length plot. Used combination trPlWidth determine size plots layout plot trial. values metadata TD set values corresponding column meta. Existing values overwritten, NA ignored setting value NA result accidentally removing .","code":""},{"path":[]},{"path":"/reference/getMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set metadata for TD objects — getMeta","text":"","code":"data(\"dropsRaw\")  ## Create a TD object. dropsTD <- createTD(data = dropsRaw[dropsRaw$year == 2012, ],                     genotype = \"Variety_ID\",                     trial = \"Experiment\",                     loc = \"Site\",                     repId = \"Replicate\",                     subBlock = \"block\",                     rowCoord = \"Row\",                     colCoord = \"Column\",                     trLat = \"Lat\",                     trLong = \"Long\")  ## Get meta data from dropsTD. (dropsMeta <- getMeta(dropsTD)) #>        trLocation trDate trDesign  trLat trLong trPlWidth trPlLength #> Cam12R Campagnola   <NA>       NA 45.171  9.532        NA         NA #> Cra12R    Craiova   <NA>       NA 44.116 24.348        NA         NA #> Gai12W    Gaillac   <NA>       NA 43.910  1.890        NA         NA #> Kar12W  Karlsruhe   <NA>       NA 49.100  8.320        NA         NA #> Ner12R      Nerac   <NA>       NA 44.170  0.307        NA         NA  ## Add trial date to meta data. dropsMeta$trDate <- as.Date(rep(\"010112\", times = 5), \"%d%m%y\")  ## Add back meta data to wheatTD. dropsTD <- setMeta(dropsTD,                    dropsMeta)"},{"path":"/reference/outlierSTA.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifying outliers in objects of class STA — outlierSTA","title":"Identifying outliers in objects of class STA — outlierSTA","text":"Function identify observations standardized residuals exceeding rLimit. provided rLimit computed qnorm(1 - 0.5 / rDf) rDf residual degrees freedom model. value restricted interval 2..4. Alternatively custom limit may provided. verbose = TRUE summary printed outliers observations value commonFactors. column outlier output can used distinguish real outliers observations included commonFactors.","code":""},{"path":"/reference/outlierSTA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifying outliers in objects of class STA — outlierSTA","text":"","code":"outlierSTA(   STA,   trials = NULL,   traits = NULL,   what = NULL,   rLimit = NULL,   commonFactors = NULL,   verbose = TRUE )"},{"path":"/reference/outlierSTA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifying outliers in objects of class STA — outlierSTA","text":"STA object class STA. trials character vector specifying trials outliers identified. trials = NULL, trials included. traits character vector specifying traits outliers identified. character string indicating whether outliers identified fitted model genotype fixed (= \"fixed\") genotype random (= \"random\") factor. STA contains one model model chosen automatically. rLimit numerical value used determining value considered outlier. observations standardized residuals exceeding rLimit marked outliers. commonFactors character vector specifying names columns TD used selecting observations similar outliers. commonFactors = NULL, outliers reported similar observations. verbose outliers printed console?","code":""},{"path":"/reference/outlierSTA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifying outliers in objects of class STA — outlierSTA","text":"list two components: indicator - list numeric vectors indicating location outliers data outliers - data.frame containing outliers observations similar outliers defined commonFactors","code":""},{"path":"/reference/outlierSTA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifying outliers in objects of class STA — outlierSTA","text":"","code":"## Fit a model using lme4. modLme <- fitTD(TD = TDHeat05,                 traits = \"yield\",                 design = \"res.rowcol\",                 engine = \"lme4\")  ## Detect outliers in the standardized residuals of the fitted model. outliers <- outlierSTA(STA = modLme,                        traits = \"yield\") #> No large standardized residuals."},{"path":"/reference/plot.STA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for class STA — plot.STA","title":"Plot function for class STA — plot.STA","text":"function draws either four base plots: histogram residuals normal Q-Q plot residuals vs fitted values plot absolute residuals vs fitted values plot five six spatial plots: spatial plot raw data spatial plot fitted data spatial plot residuals spatial plot estimated spatial trend (SpATS ) spatial plot BLUEs BLUPs histogram BLUEs BLUPs Spatial plots can made data contains row column information.","code":""},{"path":"/reference/plot.STA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for class STA — plot.STA","text":"","code":"# S3 method for STA plot(   x,   ...,   trials = NULL,   traits = NULL,   what = NULL,   plotType = c(\"base\", \"spatial\"),   spaTrend = c(\"raw\", \"percentage\"),   outCols = ifelse(plotType == \"base\", 2, 3),   title = NULL,   output = TRUE )"},{"path":"/reference/plot.STA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for class STA — plot.STA","text":"x object class STA. ... graphical parameters. trials character vector indicating trials plot. trials = NULL, trials plotted. traits character vector indicating traits plot. traits = NULL, traits plotted. character string indicating whether fitted model genotype fixed (= \"fixed\") genotype random (= \"random\") factor plotted. x contains one model model chosen automatically. plotType character string indicating whether base plots spatial plots made. spaTrend character string indicating spatial trend displayed. Either \"raw\" (original scale), \"percentage\". \"percentage\", estimated spatial trend scaled (.e., divided average observed response variable interest across field) results shown percentage. outCols integer indicating number columns use displaying plots. Usually default 2 base plots 3 spatial plots fine, decreasing numbers may help nicer printing. title character string used title plot. Note title specified multiple plots created, plots get title. output plot output current device? FALSE list ggplot objects invisibly returned.","code":""},{"path":"/reference/plot.STA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function for class STA — plot.STA","text":"list containing ggplot objects selected plots.","code":""},{"path":[]},{"path":"/reference/plot.STA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for class STA — plot.STA","text":"","code":"## Run a single trait analysis using SpATS. modSp <- fitTD(TD = TDHeat05,                design = \"res.rowcol\",                traits = \"yield\") #> Using SpATS for fitting models.  ## Create base plots. plot(modSp,      what = \"fixed\",      plotType = \"base\")   ## Create spatial plots. plot(modSp,      what = \"fixed\",      plotType = \"spatial\")   ## Create spatial plots showing the spatial trend as percentage. plot(modSp,      what = \"fixed\",      plotType = \"spatial\",      spaTrend = \"percentage\")"},{"path":"/reference/plot.TD.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for class TD — plot.TD","title":"Plot function for class TD — plot.TD","text":"Plotting function objects class TD. Plots either layout different trials within TD object locates trials map. Also boxplot can made selected traits trials, plot correlations trials scatter plot matrix. detailed description optional extra parameters different plots given sections .","code":""},{"path":"/reference/plot.TD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for class TD — plot.TD","text":"","code":"# S3 method for TD plot(   x,   ...,   plotType = c(\"layout\", \"map\", \"box\", \"cor\", \"scatter\"),   trials = names(x),   traits = NULL,   title = NULL,   output = TRUE )"},{"path":"/reference/plot.TD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for class TD — plot.TD","text":"x object class TD. ... Extra plot options. Described per plotType respective section. plotType single character string indicating plot made. See sections detailed explanation plots. trials character vector indicating trials include plot. traits character vector indicating traits plot made. Ignored plotType = \"map\". title character string used title plot. Note title specified multiple plots created, plots get title. output plot output current device? FALSE list ggplot objects invisibly returned.","code":""},{"path":"/reference/plot.TD.html","id":"layout-plot","dir":"Reference","previous_headings":"","what":"Layout Plot","title":"Plot function for class TD — plot.TD","text":"Plots layout selected trials. plot can made trials contain row (rowCoord) column (colCoord) information. either one missing trial skipped warning. blocks (subBlock) available trial can colored different colors per block setting colorSubBlock = TRUE. replicates (repId) available black line plotted different replicates. Missing plots indicated white. can either single plots trial complete missing columns rows. Extra parameter options: showGeno individual genotypes indicated text plot? Defaults FALSE sizeGeno text size indicating individual genotypes. Defaults 2. Ignored showGeno = FALSE. highlight character vector genotypes highlighted plot. colHighlight character vector specifying colors use highlighted genotypes. specified, default ggplot colors used. colorSubBlock blocks colored different color per subBlock? Defaults FALSE. colorSubBlock ignored highlight used highlight genotypes. colSubBlock character vector specifying colors use subBlocks. specified, default ggplot colors used.","code":""},{"path":"/reference/plot.TD.html","id":"map-plot","dir":"Reference","previous_headings":"","what":"Map Plot","title":"Plot function for class TD — plot.TD","text":"map plotted locations trials TD object. Mapping trials done based latitude longitude can added creating object class TD. Trials either latitude longitude available skipped warning message. countries trials located plotted single map location trials indicated map. actual plot made using ggplot, getting data borders countries maps package needed. Extra parameter options: colorTrialBy character string indicating column TD trials map colored. colTrial character vector plot colors trials. single color colorTrialBy = NULL, vector colors otherwise. printTrialNames trial names printed. Defaults TRUE. Setting FALSE can useful many trials. minLatRange positive numerical value indicating minimum range (degrees) latitude plotted map. Defaults 10. minLongRange positive numerical value indicating minimum range (degrees) longitude plotted map. Defaults 5.","code":""},{"path":"/reference/plot.TD.html","id":"box-plot","dir":"Reference","previous_headings":"","what":"Box Plot","title":"Plot function for class TD — plot.TD","text":"Creates boxplot per selected trait grouped trial. Extra parameter options: groupBy character string indicating column TD boxes plot grouped. default boxes grouped per trial. colorTrialBy character string indicating column TD boxes colored. Coloring done within groups indicated groupBy parameter. colTrial character vector plot colors trials. single color colorTrialBy = NULL, vector colors otherwise. orderBy character string indicating way boxes ordered. Either \"alphabetic\" alphabetical ordering groups, \"ascending\" ordering ascending mean, \"descending\" ordering descending mean. Default boxes ordered alphabetically.","code":""},{"path":"/reference/plot.TD.html","id":"correlation-plot","dir":"Reference","previous_headings":"","what":"Correlation Plot","title":"Plot function for class TD — plot.TD","text":"Draws heat map correlations trials per selected trait. genotypes replicated within trials genotypic means taken computing correlations. order trials heat map determined clustering . Closely related trials plotted close .","code":""},{"path":"/reference/plot.TD.html","id":"scatter-plot","dir":"Reference","previous_headings":"","what":"Scatter Plot","title":"Plot function for class TD — plot.TD","text":"Draws scatter plot matrix per selected trait. genotypes replicated within trials genotypic means taken plotting. lower left matrix contains scatter plots trials. diagonal contains histograms data per trial. Extra parameter options: colorGenoBy character string indicating column TD genotypes scatter plots colored. colGeno character vector plot colors genotypes. single color colorGenoBy = NULL, vector colors otherwise. colorTrialBy character string indicating column TD trials histograms colored. colTrial character vector plot colors trials. single color colorTrialBy = NULL, vector colors otherwise. trialOrder character vector indicating order trials plot matrix (left right top bottom). vector permutation trials plotted. addCorr character string indicating position correlation trials displayed plot, either \"tl\" top left, \"tr\", top right, \"bl\" bottom left \"br\" bottom right. NULL, default, correlation added plot.","code":""},{"path":[]},{"path":"/reference/plot.TD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for class TD — plot.TD","text":"","code":"data(\"dropsRaw\")  ## Create a TD object. dropsTD <- createTD(data = dropsRaw[dropsRaw$year == 2012, ],                     genotype = \"Variety_ID\",                     trial = \"Experiment\",                     loc = \"Site\",                     repId = \"Replicate\",                     subBlock = \"block\",                     rowCoord = \"Row\",                     colCoord = \"Column\",                     trLat = \"Lat\",                     trLong = \"Long\")  ### Layout plot.  # \\donttest{ ## Plot the layout of one of the trials. plot(dropsTD,     trials = \"Kar12W\")   ## Highlight some of the genotypes in the layout. plot(dropsTD,      trials = \"Kar12W\",      highlight = c(\"A3\", \"11430\"))   ### Map plot.  ## Plot the location of the trials on the map. plot(dropsTD,      plotType = \"map\")   ### Box plot.  ## Create a box plot for grain.yield. plot(dropsTD,      plotType = \"box\",      traits = \"grain.yield\")   ## Add coloring by scenarioFull to the boxes. plot(dropsTD,      plotType = \"box\",      traits = \"grain.yield\",      colorTrialBy = \"scenarioFull\")   ## Sort the boxes in descending order. plot(dropsTD,      plotType = \"box\",      traits = \"grain.yield\",      orderBy = \"descending\")   ### Correlation plot.  ## Plot the correlations between trials for grain.yield. plot(dropsTD,      plotType = \"cor\",      traits = \"grain.yield\")   ### Scatter plot  ## Plot scatter plot for grain.yield. plot(dropsTD,     plotType = \"scatter\",     traits = \"grain.yield\")   ## Create a scatter plot matrix for grain yield. ## Color trials by scenario and genotypes by family. plot(dropsTD,      plotType = \"scatter\",      traits = \"grain.yield\",      colorTrialBy = \"scenarioFull\",      colorGenoBy = \"geneticGroup\")  # }"},{"path":"/reference/report.STA.html","id":null,"dir":"Reference","previous_headings":"","what":"Report method for class STA — report.STA","title":"Report method for class STA — report.STA","text":"pdf reports created containing summary results fitted model(s). selected trails traits separate pdf file generated. Also .tex file folder containing figures created report enable easy modifying report.","code":""},{"path":"/reference/report.STA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report method for class STA — report.STA","text":"","code":"# S3 method for STA report(   x,   ...,   trials = NULL,   traits = NULL,   descending = TRUE,   outfile = NULL,   what = c(\"fixed\", \"random\") )"},{"path":"/reference/report.STA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report method for class STA — report.STA","text":"x object class STA. ... arguments passed report function. trials character vector indicating trials report. trials = NULL, trials reported. traits character vector indicating traits report. traits = NULL, traits reported. descending trait ordered descending order? Set FALSE low values trait indicate better performance. outfile character string, name location output .pdf .tex file report. NULL, report default name created current working directory. Trial, trait type model (genotype fixed random) concatenated name output file. knitr pdflatex work well spaces file paths therefore disallowed. Relative paths possible though. character vector indicating whether fitted model genotype fixed genotype random factor reported. default fitted models STA object reported.","code":""},{"path":"/reference/report.STA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report method for class STA — report.STA","text":"pdf report .tex file figures folder can used recreate report.","code":""},{"path":"/reference/report.STA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Report method for class STA — report.STA","text":"function uses pdflatex create pdf report. run correctly installation LaTeX required. Checking done Sys.(\"pdflatex\").","code":""},{"path":[]},{"path":"/reference/report.STA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report method for class STA — report.STA","text":"","code":"## Fit model using lme4. modLme <- fitTD(TD = TDHeat05,                 design = \"ibd\",                 traits = \"yield\",                 engine = \"lme4\")  ## Create a pdf report summarizing the results for the model with genotype ## as fixed factor. # \\donttest{ report(modLme,        outfile = tempfile(fileext = \".pdf\"),        what = \"fixed\") #> Error in report.STA(modLme, outfile = tempfile(fileext = \".pdf\"), what = \"fixed\"): An installation of LaTeX is required to create a pdf report. # }  ## Create two pdf report summarizing the results for the model with genotype ## as fixed factor and for the model with genotype as random factor. Order ## the results in ascending order. # \\donttest{ report(modLme,        outfile = tempfile(fileext = \".pdf\"),        descending = FALSE) #> Error in report.STA(modLme, outfile = tempfile(fileext = \".pdf\"), descending = FALSE): An installation of LaTeX is required to create a pdf report. # }"},{"path":"/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Base method for creating a report — report","title":"Base method for creating a report — report","text":"Base method creating .pdf .tex report R object.","code":""},{"path":"/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base method for creating a report — report","text":"","code":"report(x, ...)"},{"path":"/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base method for creating a report — report","text":"x R object ... arguments passed specific report functions.","code":""},{"path":[]},{"path":"/reference/statgenSTA-package.html","id":null,"dir":"Reference","previous_headings":"","what":"statgenSTA: Single Trial Analysis (STA) of Field Trials — statgenSTA-package","title":"statgenSTA: Single Trial Analysis (STA) of Field Trials — statgenSTA-package","text":"Phenotypic analysis field trials using mixed models without spatial components. One series statistical genetic packages streamlining analysis typical plant breeding experiments developed Biometris. functions created used conjunction R package 'asreml' 'ASReml' software, can obtained upon purchase 'VSN' international (https://vsni.co.uk/software/asreml-r).","code":""},{"path":[]},{"path":"/reference/statgenSTA-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"statgenSTA: Single Trial Analysis (STA) of Field Trials — statgenSTA-package","text":"Maintainer: Bart-Jan van Rossum bart-jan.vanrossum@wur.nl (ORCID) contributors: Fred van Eeuwijk (ORCID) [contributor] Martin Boer (ORCID) [contributor] Marcos Malosetti (ORCID) [contributor] Daniela Bustos-Korts (ORCID) [contributor] Emilie J. Millet (ORCID) [contributor] Joao Paulo (ORCID) [contributor] Maikel Verouden (ORCID) [contributor] Willem Kruijer (ORCID) [contributor] Ron Wehrens (ORCID) [contributor] Choazhi Zheng (ORCID) [contributor]","code":""},{"path":"/reference/summary.STA.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing objects of class STA — summary.STA","title":"Summarizing objects of class STA — summary.STA","text":"summary method class STA.","code":""},{"path":"/reference/summary.STA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing objects of class STA — summary.STA","text":"","code":"# S3 method for STA summary(   object,   trials = NULL,   trait = NULL,   nBest = 20,   sortBy = NULL,   naLast = TRUE,   decreasing = TRUE,   ... )"},{"path":"/reference/summary.STA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing objects of class STA — summary.STA","text":"object object class STA. trials character vector indicating trial summarize. trial = NULL summary made trials STA object. single trial selected full summary trial created. multiple trials summary table importantant statistics returned. trait character string indicating trait summarize. trait = NULL one trait modeled, trait summarized. nBest integer indicating number best genotypes (sorted either BLUEs BLUPs) print. NA, genotypes printed. sortBy character string specifying genotypes sorted. Either \"BLUEs\", \"BLUPs\" NA (.e. sorting). naLast missing values data put last sorting? decreasing sort order decreasing? ... arguments - used.","code":""},{"path":[]},{"path":"/reference/summary.STA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing objects of class STA — summary.STA","text":"","code":"## Run a single trait analysis using SpATS. modSp <- fitTD(TD = TDHeat05,                design = \"res.rowcol\",                traits = \"yield\") #> Using SpATS for fitting models.  ## Print a summary of the fitted model. summary(modSp) #> Summary statistics  #> ================== #>  #> Summary statistics for yield in HEAT05   #>  #>                             yield #> Number of observations      338.0 #> Number of missing values      0.0 #> Mean                       184.16 #> Median                     179.81 #> Min                         54.58 #> Max                        341.77 #> First quantile             148.56 #> Third quantile             220.50 #> Variance                 2569.229 #>  #>  #> Estimated heritability  #> ====================== #>  #> Heritability: 0.92  #>  #> Predicted means (BLUEs & BLUPs)  #> =============================== #> Best 20 genotypes #>         BLUEs      SE   BLUPs     SE #> SB023 285.060  11.181 273.220 10.717 #> SB025 284.271  11.079 273.493 10.600 #> SB022 281.860  11.241 269.082 10.787 #> SB032 278.754  11.111 271.306 10.630 #> SB011 270.475  11.319 263.558 10.813 #> SB156 266.811  11.300 257.270 10.776 #> SB144 265.166  11.354 256.617 10.813 #> SB031 253.335  11.056 247.661 10.567 #> SB093 247.562  11.197 246.404 10.729 #> SB055 246.730  11.390 239.976 10.864 #> SB054 246.577  11.474 238.363 10.930 #> SB020 241.319  11.159 232.928 10.684 #> SB028 239.307  11.241 235.167 10.727 #> SB194 238.182  11.300 232.570 10.836 #> SB128 237.677  11.343 232.245 10.831 #> SB155 236.158  11.255 229.047 10.723 #> SB027 235.905  11.125 230.022 10.604 #> SB143 235.825  11.390 229.027 10.848 #> SB163 233.971  11.130 228.848 10.628 #> SB181 233.137  11.084 229.614 10.580"},{"path":"/reference/summary.TD.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing objects of class TD — summary.TD","title":"Summarizing objects of class TD — summary.TD","text":"summary method class TD.","code":""},{"path":"/reference/summary.TD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing objects of class TD — summary.TD","text":"","code":"# S3 method for TD summary(   object,   ...,   trial = names(object),   traits,   groupBy = NULL,   what = if (!is.null(groupBy)) {      c(\"nObs\", \"mean\", \"sd\")  } else {      c(\"nObs\",     \"nMiss\", \"mean\", \"median\", \"min\", \"max\", \"firstQ\", \"thirdQ\", \"var\")  } )"},{"path":"/reference/summary.TD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing objects of class TD — summary.TD","text":"object object class TD. ... arguments - currently used. trial character string specifying trial summarized. traits character vector specifying traits summarized. groupBy character string specifying column TD summary grouped. NULL, grouping done. character vector indicating summary statistics computed. = \"\", available statistics computed. Possible options : nVals number values, .e. non-missing + missing values. nObs number non-missing observations. nMiss number missing values. mean mean. median median. min minimum. max maximum. range range (maximum - minimum). firstQ first (25pct) quantile. thirdQ third (75pct) quantile. sd standard deviation. seMean standard error mean. var variance. seVar standard error variance. CV coefficient variation. sum sum. sumSq sum squares. uncorSumSq uncorrected sum squares. skew skewness. seSkew standard error skewness. kurt kurtosis. seKurt standard error kurtosis. summary statistics.","code":""},{"path":"/reference/summary.TD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing objects of class TD — summary.TD","text":"table containing selected summary statistics.","code":""},{"path":[]},{"path":"/reference/summary.TD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing objects of class TD — summary.TD","text":"","code":"## Summarize TDHeat05. summary(TDHeat05,         traits = \"yield\") #>  #> Summary statistics for yield in HEAT05   #>  #>                             yield #> Number of observations      338.0 #> Number of missing values      0.0 #> Mean                       184.16 #> Median                     179.81 #> Min                         54.58 #> Max                        341.77 #> First quantile             148.56 #> Third quantile             220.50 #> Variance                 2569.229 #>   ## Summarize TDHeat05 grouping by repId. summary(TDHeat05,         traits = \"yield\",         groupBy = \"repId\") #>  #> Summary statistics for yield in HEAT05 grouped by repId  #>  #>                             1      2 #> Number of observations  169.0  169.0 #> Mean                   208.98 159.34 #> Standard deviation     45.674 42.756 #>"},{"path":"/news/index.html","id":"statgensta-10109999","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.10.9999","title":"statgenSTA 1.0.10.9999","text":"bug extractSTA fixed. now possible extract CV fixed model fitted. soft-deprecated aes_string ggplot2 longer used.","code":""},{"path":"/news/index.html","id":"statgensta-1010","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.10","title":"statgenSTA 1.0.10","text":"CRAN release: 2022-12-01 Functions longer rely soft-deprecated ggplot2 functionality. CV now computed phenotypic coefficient variation instead genotypic coefficient variation.","code":""},{"path":"/news/index.html","id":"statgensta-109","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.9","title":"statgenSTA 1.0.9","text":"CRAN release: 2022-06-24 bug STA base plots fixed. genotypes replicated field base plots showed redundant points. Thanks @marktgee. Coefficient Variation can now extracted models using SpATS (previous versions possible lme4 asreml) trying fit models genotype fixed checkId TRUE nice error message now displayed. also wasn’t possible error message come underlying packages wasn’t clear. Improved extended documentation","code":""},{"path":"/news/index.html","id":"statgensta-108","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.8","title":"statgenSTA 1.0.8","text":"CRAN release: 2021-05-25 Patch release pass CRAN check R.4.2.0. user visual changes.","code":""},{"path":"/news/index.html","id":"statgensta-107","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.7","title":"statgenSTA 1.0.7","text":"CRAN release: 2021-03-29 Heritablity now rounded two decimals models fitted using asreml lme4 already case SpATS. border color histograms scatter plots TD objects now matches fill. minor bug outlierSTA occurring column trial available fixed. Default names layout plots TD objects now trial name instead location. Layout plots now extra options sizeGeno, can used specifying text size genotypes. layout plots raw data specified trait can now visualized using traits parameter. Layout plots now extra options specifying custom colors highlighting genotypes (colHighlight) sub blocks (colSubBlock). vignette updated using data DROPS projects statgen packages. Documentation several functions improved adding extra clarification extra examples. data TDMaize now extra column indicating stress regime trials.","code":""},{"path":"/news/index.html","id":"statgensta-106","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.6","title":"statgenSTA 1.0.6","text":"CRAN release: 2020-09-23 Default colors genotypes trials improved. User specific default colors may now set R options “statgen.colGeno” (genotypes) “statgen.colTrial” (trials). New options colGeno colTrial added relevant plot functions TD objects. options can used specify colors genotypes (colGeno) trials (colTrial) plots. Option trials plot function TD objects now respected types plots. Plots TD STA object now option title. Lines sub block layout plots TD objects now displayed blue make stand clearly. Map plots TD objects now extra argument printTrialNames allows printing printing trial names map. default TRUE retains original behavior function. bug scatter plots TD objects custom ordering trials fixed. final plot spatial plots STA objects now displays BLUEs/BLUPs instead residuals. minor bug fitTD occurring column trial available fixed.","code":""},{"path":"/news/index.html","id":"statgensta-105","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.5","title":"statgenSTA 1.0.5","text":"CRAN release: 2020-06-24 Option colorBy plot functions renamed colorTrialBy colorGenoBy clear distinction actually colored. TD scatter plot options now available. Options colorTrialBy added map plots. gives possibility coloring groups trials map. Summary spatial models fitted using asreml now extra column showing heritability. creating TD object, trLat, trLong, trDesign, trDate can now used specify data column containing relevant information. Levels factor columns longer reordered creating TD object. bug tick marks disappeared spatial plot fixed. bug crashed scatter plot trials overlapping genotypes fixed. check added unique row x column combinations creating TD object. warning messages made clear. Full ggplot2 longer imported. Checking change last iteration now working correctly asreml4.","code":""},{"path":"/news/index.html","id":"statgensta-104","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.4","title":"statgenSTA 1.0.4","text":"CRAN release: 2020-03-23 Patch release handle new defaults lme4. user visual changes.","code":""},{"path":"/news/index.html","id":"statgensta-103","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.3","title":"statgenSTA 1.0.3","text":"CRAN release: 2020-02-18 now possible create scatter plot matrix objects class TD. statgenSTA longer dependent reshape2 methods. Plot colors backgrounds follow consistent pattern. Links github added DESCRIPTION file.","code":""},{"path":"/news/index.html","id":"statgensta-102","dir":"Changelog","previous_headings":"","what":"statgenSTA 1.0.2","title":"statgenSTA 1.0.2","text":"CRAN release: 2020-01-14 Initial CRAN version","code":""}]
